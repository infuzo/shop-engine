#pragma checksum "C:\Users\Infuzo\Documents\Projects\shop-engine\ShopEngine\ShopEngine\Views\AdminPanel\Categories.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "bc30364e22916ad85b46f6c14c748a6f0e465a89"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_AdminPanel_Categories), @"mvc.1.0.view", @"/Views/AdminPanel/Categories.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Infuzo\Documents\Projects\shop-engine\ShopEngine\ShopEngine\Views\_ViewImports.cshtml"
using ShopEngine;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Infuzo\Documents\Projects\shop-engine\ShopEngine\ShopEngine\Views\_ViewImports.cshtml"
using ShopEngine.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"bc30364e22916ad85b46f6c14c748a6f0e465a89", @"/Views/AdminPanel/Categories.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e85543a6a25fe0edfe7c1980401582534ee69bb8", @"/Views/_ViewImports.cshtml")]
    public class Views_AdminPanel_Categories : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<IEnumerable<ShopEngine.Models.CategoryModel>>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\Infuzo\Documents\Projects\shop-engine\ShopEngine\ShopEngine\Views\AdminPanel\Categories.cshtml"
  
	ViewData["Title"] = "View, add, change and remove categories";
	Layout = "~/Views/AdminPanel/_Layout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<div class=""bordered"" style=""width: 410px; height: 400px; display: inline-block; float: left;"">
	<strong style=""margin: 5px 5px;"" >List of categories:</strong>
	<div class=""bordered"" style=""width: 395px; height: 300px; margin-left: 5px; margin-top: 5px; overflow: scroll; padding: 5px;"">
");
#nullable restore
#line 10 "C:\Users\Infuzo\Documents\Projects\shop-engine\ShopEngine\ShopEngine\Views\AdminPanel\Categories.cshtml"
         for (int i = 0; i < 100; i++) { 

#line default
#line hidden
#nullable disable
            WriteLiteral("\t\t\t<a href=\"#\"");
            BeginWriteAttribute("onclick", " onclick=\"", 517, "\"", 630, 15);
            WriteAttributeValue("", 527, "selectCategory(event,", 527, 21, true);
            WriteAttributeValue(" ", 548, "\'catGuid-", 549, 10, true);
#nullable restore
#line 11 "C:\Users\Infuzo\Documents\Projects\shop-engine\ShopEngine\ShopEngine\Views\AdminPanel\Categories.cshtml"
WriteAttributeValue("", 558, i, 558, 2, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue("", 560, "\',", 560, 2, true);
            WriteAttributeValue(" ", 562, "\'catSubCatGuid-", 563, 16, true);
#nullable restore
#line 11 "C:\Users\Infuzo\Documents\Projects\shop-engine\ShopEngine\ShopEngine\Views\AdminPanel\Categories.cshtml"
WriteAttributeValue("", 578, i, 578, 2, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue("", 580, "\',", 580, 2, true);
            WriteAttributeValue(" ", 582, "\'Link", 583, 6, true);
            WriteAttributeValue(" ", 588, "number", 589, 7, true);
#nullable restore
#line 11 "C:\Users\Infuzo\Documents\Projects\shop-engine\ShopEngine\ShopEngine\Views\AdminPanel\Categories.cshtml"
WriteAttributeValue(" ", 595, i, 596, 2, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue("", 598, "\',", 598, 2, true);
            WriteAttributeValue(" ", 600, "\'Link", 601, 6, true);
            WriteAttributeValue(" ", 606, "number", 607, 7, true);
#nullable restore
#line 11 "C:\Users\Infuzo\Documents\Projects\shop-engine\ShopEngine\ShopEngine\Views\AdminPanel\Categories.cshtml"
WriteAttributeValue(" ", 613, i, 614, 2, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue(" ", 616, "description\')", 617, 14, true);
            EndWriteAttribute();
            WriteLiteral(">Link number ");
#nullable restore
#line 11 "C:\Users\Infuzo\Documents\Projects\shop-engine\ShopEngine\ShopEngine\Views\AdminPanel\Categories.cshtml"
                                                                                                                                                 Write(i);

#line default
#line hidden
#nullable disable
            WriteLiteral("</a><br />\r\n");
#nullable restore
#line 12 "C:\Users\Infuzo\Documents\Projects\shop-engine\ShopEngine\ShopEngine\Views\AdminPanel\Categories.cshtml"
		}

#line default
#line hidden
#nullable disable
            WriteLiteral(@"	</div>
	<button style=""display: block; margin: 5px auto;"" onclick=""addCategory(event)"">Add category</button>
</div> <div class=""bordered selectedCategoryForm"" style=""margin-left: 5px; padding: 10px 10px; width: 410px; height: 400px; display: inline-block; float: left;"">
	<br />
	<strong id=""selectedCategoryHeader"">HEADER_UNDEFINED_CONTENT</strong> <br /><br />
	<label for=""selectedCategoryName"">Name: </label><input type=""text"" required=""required"" max=""60"" id=""selectedCategoryName""/><br /><br />
	<label for=""selectedCategoryDescription"">Description: </label><textarea required=""required"" maxlength=""250"" id=""selectedCategoryDescription""></textarea><br /><br />
	<label for=""selectedCategorySubcatGuid"">Subcategory guid: </label><input type=""text"" id=""selectedCategorySubcatGuid"" /><br />
	<span><em>Paste guid of desired parent category here</em></span><br /><br /> <!--TODO: DropDownList-->

	<label for=""selectedCategoryGuid"">GUID: </label><input type=""text"" id=""selectedCategoryGuid"" readonly=""readonly"" /");
            WriteLiteral(@"><br /><br />

	<br />
	<button style=""display: none;"" id=""selectedCategoryAdd"">Add/Save category</button> <button style=""display: none;"" id=""selectedCategoryRemove"">Remove category</button>
</div>

<script>
	const idSelectedCategoryHeader = ""selectedCategoryHeader"";
	const idSelectedCategoryName = ""selectedCategoryName"";
	const idSelectedCategoryDescription = ""selectedCategoryDescription"";
	const idSelectedCategorySubcatGuid = ""selectedCategorySubcatGuid"";
	const idSelectedCategoryGuid = ""selectedCategoryGuid"";
	const idSelectedCategoryButtonAdd = ""selectedCategoryAdd"";
	const idSelectedCategoryButtonRemove = ""selectedCategoryRemove"";

	//TODO: from localization
	const textDefault = ""Select the category or add new one"";
	const textEditHeader = ""Editing the ""; 
	const textAddHeader = ""Adding the new category"";

	class Category {
		constructor(guid, subCatGuid, name, desc) {
			this.Id = guid;
			this.SubCategoryGuid = subCatGuid;
			this.Name = name;
			this.Description = desc;
		}
");
            WriteLiteral(@"
		getFormData() {
			return ""Id="" + encodeURIComponent(this.Id) + ""&SubCategoryGuid="" + encodeURIComponent(this.SubCategoryGuid) +
				""&Name="" + encodeURIComponent(this.Name) + ""&Description="" + encodeURIComponent(this.Description);
		}
	}

	function setWaitingSelectedContent(header, value) {
		document.getElementById(idSelectedCategoryHeader).innerText = header;

		let currentStyleValue = value ? ""display: none;"" : ""display: inline-block;"";

		document.getElementById(idSelectedCategoryName).style = currentStyleValue;
		document.getElementById(idSelectedCategoryDescription).style = currentStyleValue;
		document.getElementById(idSelectedCategorySubcatGuid).style = currentStyleValue;
		document.getElementById(idSelectedCategoryGuid).style = currentStyleValue;
		document.getElementById(idSelectedCategoryButtonAdd).style = currentStyleValue;
		document.getElementById(idSelectedCategoryButtonRemove).style = currentStyleValue;
	}

	function selectCategory(event, guid, subCatGuid, name, descrip");
            WriteLiteral(@"tion) {
		let selectedCategory = new Category(guid, subCatGuid, name, description);

		setWaitingSelectedContent(textEditHeader + selectedCategory.Name, false);

		document.getElementById(idSelectedCategoryName).value = selectedCategory.Name;
		document.getElementById(idSelectedCategoryDescription).value = selectedCategory.Description;
		document.getElementById(idSelectedCategorySubcatGuid).value = selectedCategory.SubCategoryGuid;
		document.getElementById(idSelectedCategoryGuid).value = selectedCategory.Id;

		document.getElementById(idSelectedCategoryButtonAdd).onclick = (e) => editCategory(e, selectedCategory);
		document.getElementById(idSelectedCategoryButtonRemove).onclick = (e) => deleteSelectedCategory(e, selectedCategory);

		event.stopPropagation();
	}

	function editCategory(event, category) {
		event.stopPropagation();
		console.log(""Edit the "" + category.Name);
	}

	function deleteSelectedCategory(event, category) {
		let result = confirm(""Do you want to delete categery \""""");
            WriteLiteral(@" + category.Name + ""\""?"");
		if (result) {
			console.log(""Delete category "" + category.Id);
		}

		event.stopPropagation();
	}

	function addCategory(event) {
		setWaitingSelectedContent(textAddHeader, false);
		document.getElementById(idSelectedCategoryButtonRemove).style = ""display: none;"";

		document.getElementById(idSelectedCategoryName).value = """";
		document.getElementById(idSelectedCategoryDescription).value = """";
		document.getElementById(idSelectedCategorySubcatGuid).value = """";
		document.getElementById(idSelectedCategoryGuid).value = """";

		document.getElementById(idSelectedCategoryButtonAdd).onclick =
			(e) => {
				let category = new Category("""",
					document.getElementById(idSelectedCategorySubcatGuid).value,
					document.getElementById(idSelectedCategoryName).value,
					document.getElementById(idSelectedCategoryDescription).value);
				onAddCategory(e, category);
			};

		event.stopPropagation();
	}

	function onAddCategory(event, category) {
		event.stopProp");
            WriteLiteral(@"agation();

		if (category.Name == """" || category.Description == """") {
			alert(""Name and description should have values."");
			return;
		}

		let request = new XMLHttpRequest();
		request.open(""POST"", ""/AdminPanel/AddCategory"");
		request.setRequestHeader('Content-type', 'application/x-www-form-urlencoded; charset=utf-8');
		request.onreadystatechange = () => {
			if (request.readyState == 4) {
				if (request.status == 200) {
					var addedObject = JSON.parse(request.responseText);
				}
				else {
					alert(""Adding the new category failed.\n"" + request.responseText);
				}
			}
		};

		request.send(category.getFormData());
	}

	setWaitingSelectedContent(textDefault, true);
</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IEnumerable<ShopEngine.Models.CategoryModel>> Html { get; private set; }
    }
}
#pragma warning restore 1591
