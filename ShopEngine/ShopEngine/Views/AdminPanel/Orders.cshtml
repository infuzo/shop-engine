@{
	ViewData["Title"] = "Orders View/Add/Delete";
	Layout = "~/Views/AdminPanel/_Layout.cshtml";
}
<!--TODO partial view-->
<div id="ordersSelectProductWindow">
	<table class="ordersProductsListSearchForm">
		<tr>
			<td>
				<input type="text" id="productSearchInput" placeholder="Enter the name, guid or vendor code" />
			</td>
			<td class="searchButtonContainer" id="clearSearchResultsButtonContainer">
				<button id="clearSearchResultsButton">Clear</button>
			</td>
			<td class="searchButtonContainer">
				<button id="productSearchButton">Search</button>
			</td>
		</tr>
	</table>
	<div class="bordered" id="ordersListItemsParent"></div>
	<div class="ordersProductsPagesNavigation"></div>
</div>

<div class="leftList bordered">
	<br /><strong style="margin: 5px 5px;">List of orders:</strong>
	<table class="ordersListSearchForm">
		<tr>
			<td>
				<input type="text" id="orderSearchInput" placeholder="Enter the number, guid or customer code\email" />
			</td>
			<td class="searchButtonContainer" id="clearOrdersSearchResultsButtonContainer">
				<button id="clearOrdersSearchResultsButton">Clear</button>
			</td>
			<td class="searchButtonContainer">
				<button id="ordersSearchButton">Search</button>
			</td>
		</tr>
	</table>
	<div class="bordered" id="listItemsParent"></div>
	<div class="pagesNavigation"></div>
	<button style="display: block; margin: 5px auto;" onclick="addOrder(event)">Add order</button>
</div>

<script src="~/js/ProductModel.js"></script>
<script src="~/js/ProductsSearchableList.js"></script>
<script>


	const productsSearchableList = new ProductsSearchableList();
	productsSearchableList.idProductsListParent = "ordersListItemsParent";
	productsSearchableList.classPagesNavigation = "ordersProductsPagesNavigation";

	loadCss();
	loadProductsPageAndFillList(1, true);

	function loadProductsPageAndFillList(page, fromCache) {
		productsSearchableList.setProductsListWaitingStatus(true);
		productsSearchableList.getProductsOnPage(page, fromCache)
			.then(content => {
				productsSearchableList.setProductsListWaitingStatus(false);
				productsSearchableList.initializeArrayAndPaginationFromJson(content, page => loadProductsPageAndFillList(page, true));
			})
			.catch(content => {
				productsSearchableList.setProductsListWaitingStatus(false);
				alert(content);
			});
	}

	function loadCss() {
		var head = document.getElementsByTagName("head")[0];
		var link = document.createElement("link");
		link.rel = "stylesheet";
		link.href = "/css/listOfProducts.css";

		head.appendChild(link);
	}
</script>
